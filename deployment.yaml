apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-mongo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-mongo
  template:
    metadata:
      labels:
        app: node-mongo
    spec:
      containers:
        - name: node-mongo-container
          image: weamfayad18/backend:2.0.58  # Adjust with your Docker image for the backend
          ports:
            - containerPort: 8000  # Port for Node.js app
            - containerPort: 27017 # Port for MongoDB
          volumeMounts:
            - name: data-volume
              mountPath: /data/db
      volumes:
        - name: data-volume
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: node-mongo-service
spec:
  type: NodePort
  selector:
    app: node-mongo
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-frontend-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: react-frontend
  template:
    metadata:
      labels:
        app: react-frontend
    spec:
      containers:
        - name: nginx-container
          image: weamfayad18/frontend:2.0.58  # Adjust with your Docker image for the frontend
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: react-frontend-service
spec:
  type: NodePort
  selector:
    app: react-frontend
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
